@charset "UTF-8";
// 1. Configuration and helpers
@use '/src/helpers/styles/abstracts/functions';
@use '/src/helpers/styles/abstracts/variables';
@use '/src/helpers/styles/abstracts/mixins';
@use '/src/helpers/styles/abstracts/responsive' as *;

.wp-block-mppps-post-details {
  position: absolute !important;
  z-index: 10001;
  bottom: var(--spacing-lg);
  left: 50%;
  grid-template: 'popup' auto;
  width: 340px;
  max-width: calc(100% - (var(--spacing-md) * 2));
  height: 240px;
  overflow-x: hidden;
  overflow-y: auto;
  transform: translateX(-50%);
  transition:
    width 0.3s ease-in-out,
    height 0.3s ease-in-out,
    var(--details-transition, var(--nomotion, transform 0.3s ease-in-out 0.15s), var(--nomotion, opacity 0.3s ease-in-out));
  border-radius: var(--radius-md);
  opacity: var(--details-opacity, 0);
  background-color: var(--color-white);
  box-shadow: var(--details-shadow, var(--shadow-mobile-details-popup));
  pointer-events: var(--details-pe, none);
  overscroll-behavior: contain;

  @include container-breakpoint-up(mappps, #{variables.$mobile-breakpoint}) {
    --details-shadow: none;

    top: 0;
    bottom: 0;
    left: initial;
    inset-inline-start: var(--sidebar-size, 25cqw);
    width: var(--details-size, max-content);
    height: var(--wrapper-height);
    transform: translateX(var(--details-transform, -100%));
    border-radius: 0;
    border-inline-start: 1px solid var(--color-gray-300);
  }

  &[data-expanded='true'] {
    @include container-breakpoint-down(mappps, #{variables.$mobile-breakpoint}) {
      bottom: 0;
      width: 100%;
      max-width: initial;
      height: 100%;
    }
  }

  &[data-hidden='false'] {
    --details-transition: var(--nomotion, transform 0.3s ease-in-out), var(--nomotion, opacity 0.3s ease-in-out 0.15s);
    --details-transform: 0%;
    --details-opacity: 1;
    --details-pe: all;
  }

  .header__cta-wrapper {
    display: flex;
    position: absolute;
    position: sticky;
    z-index: 1;
    top: 0;
    top: 0;
    right: 0;
    left: 0;
    flex-wrap: wrap;
    justify-content: flex-end;
    max-width: 100%;
    margin-top: calc(60px * -1); // TODO: find a way to get the height dynamically
    padding: var(--spacing-md);
    gap: var(--spacing-xs);

    .cta-wrapper {
      &__expand {
        @include container-breakpoint-up(mappps, #{variables.$mobile-breakpoint}) {
          display: none;
        }
      }

      &__close {
        --bg-color: var(--color-secondary);
        --color: var(--color-button-secondary);

        margin-left: var(--spacing-xs);
      }
    }
  }
}
